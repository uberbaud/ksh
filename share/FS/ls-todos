# <@(#)tag:csongor.greyshirt.net,2017-08-04:tw/17.02.36z/4702a42>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^[^T-H^t^] ^[^Umatch1^u ^T…^t ^[^UmatchN^u^]^]
#:   Print any unfinished tasks from ^STODO^s file, possibly filtering.
#:     ^T-H^t  Print ^N== TODO ==^n header

needs term-does-utf8
function ls-todos {
	[[ -f TODO ]]|| return 0
	: ${NL:?}
	local Body Head Lines N Sep ShowIt TODO filetype tabstop textwidth todo
	ShowIt=false
	Sep="@ "
	TODO="$(<TODO)"
	TODO="${TODO#$Sep}"
	splitstr "$NL$Sep" "$TODO" todo
	: Pipe to sparkle; {
		local ln first last s1 sF sN sL
		if term-does-utf8; then
			sB='━━'; s1='⊂'; sF='┌'; sN='│'; sL='└'
		else
			sB='=='; s1='='; sF='/'; sN='|'; sL='\'
		fi
		[[ ${1:-} == -H ]]&& {
			print -r -- "  ^N$sB TODO $sB^n"
			shift
		  }
		Sep=''
		for Task in "${todo[@]}"; do
			Head="${Task%%$NL*}"
			[[ $Head == *' DONE '* ]]&& continue
			Body="${Task#$Head$NL}"
			if (($#)); then
				for Match; do
					[[ $Body == *$Match* ]]&& {
						ShowIt=true
						break
					  }
				done
			else
				ShowIt=true
			fi
			$ShowIt && {
				splitstr "$NL" "$Body" Lines
				if ((${#Lines[*]}==1)); then
					print -r -- "  ^N$s1^n ${Lines[0]##@(    |   |  | )}"
				else
					lndx=$((${#Lines[*]}-1))
					first=${Lines[0]##@(    |   |  | )}
					last=${Lines[lndx]##@(    |   |  | )}
					unset Lines[0] Lines[lndx]
					print -r -- "  ^N$sF^n $first"
					for ln in "${Lines[@]}"; do
						ln=${ln##@(    |   |  | )}
						print -r -- "  ^N$sN^n $ln"
					done
					print -r -- "  ^N$sL^n $last"
				fi
				#print -r -- "$Sep$Body"
				#Sep="  ^N----^n$NL"
				ShowIt=false
			  }
		done
	  } | sparkle
	unset todo REPLY
}


# Copyright © 2017 by Tom Davis <tom@greyshirt.net>.

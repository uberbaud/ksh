# <@(#)tag:csongor.greyshirt.net,2017-08-15:tw/07.58.21z/2951f07>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^[^Unote text^u^]
#:   Jot a quick note.
#:   Stores notes to ^B^S$PWD^s/NOTES^b and links in ^B^S$SYSDATA^s/notes^b.
#:   ^GList notes with^g ^Tls-notes^t.

needs xclip
function note {(
	local NOTES="$PWD"/NOTES OLDPWD="$PWD" setnoglob=false
	local noterepo=${SYSDATA:?}/notes
	[[ $PWD == */NOTES ]]&& NOTES="$PWD"
	[[ $NOTES == $HOME ]]&& NOTES=${XDG_DOCUMENTS_DIR:-$HOME/docs}/NOTES
	[[ -d $noterepo ]]|| {
		mkdir -p "$noterepo" ||
			die "Could not ^Tmkdir^t ^B$noterepo^b."
	  }
	[[ -d "$NOTES"/RCS ]]|| {
		mkdir -p "$NOTES"/RCS || die "Could not ^Tmkdir^t ^B$NOTES^b."
	  }
	cd "$NOTES"
	[[ -o noglob ]]&& { setnoglob=true; set +f; }
	set -A Q -- *.note
	local seqnum=0
	integer c
	[[ ${Q[0]} == \*.note ]]|| # returning *.note means no matches
		for q in "${Q[@]}"; do
			c=${q%.note}
			((seqnum<c))&& seqnum="$c"
		done
	# just in case everyone is trying to create a new note in the same 
	# directory!
	local TMPFILE="$(mktemp note-XXXXXXXXX)" tries=5 repolink SHA384
	while ((tries--)); do
		((seqnum++))
		seqnote=$seqnum.note
		ln "$TMPFILE" "$seqnote" && break
		octet="$(dd bs=1 count=1 status=none if=/dev/urandom)"
		sleep 0.$(printf '%03d' \'$octet)
	done
	/bin/rm "$TMPFILE"
	$setnoglob && set -f
	((tries>=0))|| die 'Could not create ^Bnote^b.'
	new -nz note "$*"
	xclip -out -selection clipboard >$seqnote
	repolink="$noterepo/$(date -u +'%Y-%m-%dz')-${OLDPWD##*/}-$seqnum"
	tries=0
	while ! ln -s "$PWD/$seqnote" "$repolink" 2>/dev/null; do
		[[ "$(readlink "$repolink")" == $PWD/$seqnote ]]&& break
		repolink="${repolink%%,+([0-9])},$((tries++))"
exit
	done
	(($#))|| {
		SHA384="$(cksum -qa sha384b "$seqnote")"
		v $seqnote '.'
		[[ $SHA384 == "$(cksum -qa sha384b "$seqnote")" ]]&& {
			# no changes, so delete everything.
			warn "Discarding empty note."
			/bin/rm -f "$seqnote" "RCS/$seqnote,v" "$repolink"
		  }
	  }
)}

# Copyright Â© 2017 by Tom Davis,,, <tom@greyshirt.net>.

# <@(#)tag:csongor.greyshirt.net,2017-08-15:tw/07.58.21z/2951f07>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^[^T-^t^Udir^u^] ^[^Unote_text^u^]
#:   Jot a quick note.
#:   Stores notes to ^B^O$^o^VPWD^v/^O$^o^{^VDEPO^v^:^-^TNOTES^t^}^b and
#:   links in ^B^O$^o^VSYSDATA^v/notes^b ^Bif^b ^O$^o^VDEPO^v ^O==^o ^TNOTES^t.
#:       ^GList notes with^g ^Tls-notes^t.

needs xclip needs-path $BS/v.ksh fast-crypt-hash
function note {(
	typeset DEPO OLDPWD setnoglob noterepo syslink
	# handle alternate repository
	typeset -u dNAME
	[[ ${1:-} == -* ]]&&  { dNAME=${1#-}; shift; }
	[[ -z $dNAME ]]&&		dNAME=NOTES
	[[ $dNAME == +([A-Za-z0-9_-]) ]]||
		die "^O$^o^VDEPO^v can only contain ^[^TA^t^O-^o^TZ^t^Ta^t^O-^o^Tz^t^T0^t^O-^o^T9_-^t^]."

	[[ $dNAME == NOTES ]]&& syslink=true || syslink=false
	DEPO="$PWD/$dNAME"; OLDPWD="$PWD"; setnoglob=false
	$syslink && noterepo=${SYSDATA:?}/notes

	[[ $PWD == */$dNAME ]]&& DEPO=$PWD
	[[ $DEPO == $HOME ]]&& DEPO=${XDG_DOCUMENTS_DIR:-$HOME/docs}/$dNAME
	$syslink && needs-path -create -or-die "$noterepo"
	needs-path -create -or-die "$DEPO"/RCS
	cd "$DEPO"
	[[ -o noglob ]]&& { setnoglob=true; set +f; }
	set -A Q -- *.note
	local seqnum=0
	integer c
	[[ ${Q[0]} == \*.note ]]|| # returning *.note means no matches
		for q in "${Q[@]}"; do
			c=${q%.note}
			((seqnum<c))&& seqnum=$c
		done
	# just in case everyone is trying to create a new note in the same 
	# directory!
	local TMPFILE=$(mktemp note-XXXXXXXXX) tries=5 repolink CRYPTHASH
	while ((tries--)); do
		((seqnum++))
		seqnote=$seqnum.note
		ln "$TMPFILE" "$seqnote" && break
		octet=$(dd bs=1 count=1 status=none if=/dev/urandom)
		sleep 0.$(printf '%03d' \'$octet)
	done
	/bin/rm "$TMPFILE"
	$setnoglob && set -f
	((tries>=0))|| die 'Could not create ^Bnote^b.'
	>$seqnote (
		mk-stemma-header; print # mk-stemma-header doesn't output a newline
		date -u +'%Y-%m-%d %H:%M:%S Z'
		print -r -- "$*"
	  )
	$syslink && {
		repolink="$noterepo/$(date -u +'%Y-%m-%dz')-${OLDPWD##*/}-$seqnum"
		tries=0
		while ! ln -s "$PWD/$seqnote" "$repolink" 2>/dev/null; do
			[[ $(realpath "$repolink") == $PWD/$seqnote ]]&& break
			repolink="${repolink%%,+([0-9])},$((tries++))"
		done
	  }
	(($#))|| {
		CRYPTHASH=$(fast-crypt-hash "$seqnote")
		DESCRIPTION="note $seqnum" $BS/v.ksh $seqnote '.'
		[[ $CRYPTHASH == $(fast-crypt-hash "$seqnote") ]]&& {
			# no changes, so delete everything.
			warn "Discarding empty note."
			/bin/rm -f "$seqnote" "RCS/$seqnote,v" ${repolink:+"$repolink"}
		  }
	  }
)}

# Copyright Â© 2017 by Tom Davis <tom@greyshirt.net>.

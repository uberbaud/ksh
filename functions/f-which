# @(#)[:%-k{ne9ZT;hT_sK^JyE>: 2017-10-14 18:34:14 Z tw@csongor]
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^G(no arguments)^g
#:   like ^Twhence^T^|^Tcommand -v^t but implementing ^[^T-a^t^]

function x-which-one {
	local whence rc found=false
	# alias
	whence="$(alias "$1")" && { print -r -- "$whence"; found=true; }
	eval $SATISFIED
	# function
	typeset -f "$1" && found=true
	eval $SATISFIED

	whence="$(unalias "$1"; unset -f "$1"; command -V "$1")"
	case "${whence#* is }" in
		*reserved*)	print -r -- "$1 #reserved";			found=true;		;;
		*special*)	print -r -- "$1 #special builtin";	found=true;		;;
		*builtin*)	print -r -- "$1 #builtin";			found=true;		;;
	esac
	eval $SATISFIED

	command which $wopt "$1" 2>/dev/null && found=true
	$found
}

function f-which {
	local c Option ok=true wopt='' SATISFIED='$found && return 0'

	while getopts ':a' Option; do
		case $Option in
			a)	wopt='-a'; SATISFIED=:;								;;
			\?)	die "Invalid options: ^B-$OPTARG^b.";				;;
			\:)	die "Option ^B-$OPTARG^b requires an argument.";	;;
		esac
	done
	shift $(($OPTIND-1))

	for c { x-which-one "$c" || ok=false; }

	$ok
}

# Copyright Â© 2017 by Tom Davis <tom@greyshirt.net>.

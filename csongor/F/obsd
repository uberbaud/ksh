# <@(#)tag:csongor.greyshirt.net,2017-08-07:tw/21.17.56z/1c70181>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^G(no arguments)^g
#:   Handle mail from the OpenBSD CVS change list specially.

function obsd {
	local filter='' W=5 refold='' P="${PAGER:-less}"
	needs show fold awk $P cat

	# arbitary number after which the file list will be shown as "*"
	MAXFILES=${OBSD_MAXFILE_LIST:-7}
	(($MAXFILES))|| warn 'OBSD_MAXFILE_LIST is set to 0, no files listed.'
	filter="$(</dev/stdin)" <<-\
		\==AWK==
		# |>>> Message 5          ← when there's more than one (1) message
		/^>>> Message [0-9]+$/			{ N=$3; p=0; }
		# |(Message inbox:5)    ← when there's only one (1) message
		/^\(Message [a-z]+:[0-9]+\)$/	{ sub("\\)",""); N=$2; p=0; }
		# from start of log message excluding the header
		/^Modified files:/				{ Fa="";  f=1; next; }
		/^Added files:/					{ Fa="+"; f=1; next; }
		/^Removed files:/				{ Fa="-"; f=1; next; }
		f==1 && /^$/					{ f=0; next; }
		f==1 {
			if ($1 ~ /:$/)		{ i=2; }
			else if ($2 == ":")	{ i=3; }
			else				{ i=1; }
			while (i<=NF) { F[Fa$i]++; i++; }
		  }
		/^Log [Mm]essage:/ {
			p=1;
			B=0;
			printf( "%s%s\n", L, N);
			x="^G";
			if (length(F) > MAXFILES)
				printf("(*");
			else
				for (k in F) {printf( "%s%s", x, k ); x=" "}
			printf( "^g " );
			delete F;
			Fx=0;
			L = "\n";
			next;
		  }
		# until a blank line
		p==0						{next;}
		/^$/						{B=1; next}
		B==1				{printf( "\n\n" ); B=0;}
		# always
							{printf( "%s ", $0 );}
		==AWK==

	refold="$(</dev/stdin)" <<-\
	==AWK==
	/^$/ {next}							# skip blank lines
	/^[0-9]+\$/ {X="obsd:";Y=\$0;next}
		{printf "^N%-5s^n^B%-${W}s^b%s\n",X,Y,\$0;X="";Y=""}
	==AWK==

	COLUMNS=${COLUMNS:-$(tput cols)}
	local spesc ok eok rby blnk
	spesc='s/\^/^^/g'
	ok='s/[Oo][Kk]( [a-z]+@,?)+//g'
	eok='s/[Oo][Kk]( [a-z]+@?,?)+[[:space:]]*$//g'
	rby='s/ ?reported by [a-z]+//'
	blnk='/^[[:space:]]$/d'

	local OUTPUT linecount
	OUTPUT="$(
		show +inbox obsd -form mhl.body								|
		sed -E -e "$spesc" -e "$ok" -e "$eok" -e "$rby" -e "$blnk"	|
		awk -v MAXFILES=$MAXFILES "$filter"			|
		fold -s -w $((COLUMNS-W-7))					|
		awk "$refold"								|
		sparkle
	  )"
	linecount=$(print "$OUTPUT"|wc -l|tr -cd '[0-9]')

	[[ -t 1 ]]||			P=cat
	((linecount<LINES))&&	P=cat

	print "$OUTPUT"|$P
}


# Copyright © 2017 by Tom Davis <tom@greyshirt.net>.

# <@(#)tag:csongor.greyshirt.net,2017-07-31:tw/18.04.18z/2c0784e>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^Ufile name^u
#:   Notes that a file should be synced. Ignores requests for files
#:   whose full path name includes the string ^U^Isecret^i^u or which are
#:   in ^S$XDG_CACHE_HOME^s, ^S$TMPDIR^s, or ^S/tmp^s.

function trackfile {
	local istemp=false
	[[ -f "$1" ]]|| {
		warn "Can't track a non-existent file." "$1"
		return 1
	  }
	[[ $1 == *secret* ]]&& {
		warn 'Will not track a ^Bsecret^b file.'
		return 0
	  }

	typeset t="$(readlink -nf "$1")" p=''
	[[ -n "$t" ]]|| { warn 'File disappeared!'; return 1; }

	[[ $t == /tmp/* ]]&&									istemp=true
	[[ -n $TMPDIR && $t == $TMPDIR/* ]]&&					istemp=true
	[[ -n $XDG_CACHE_HOME && $t == $XDG_CACHE_HOME/* ]]&&	istemp=true
	$istemp && {
		warn 'Will not track a ^Btemporary^b file.'
		return 0
	  }
	[[ $t == *secret* ]]&& {
		warn 'Will not track a ^Bsecret^b file.'
		return 0
	  }

	typeset trackdir="$HOME"/hold/DOCSTORE/TRACK
	[[ -d $trackdir ]]|| mkdir -p "$trackdir" || {
		warn 'Could not [1mmkdir [22m $HOME/hold/DOCSTORE/TRACK'
		return 1
	  }

	chflags nouchg "$trackdir" # just in case we `chflags uchg *`ed
	# Since we want the encoding to be decodeable, we need to escape 
	# percent signs (%), which means we also need to escape whatever we 
	# use to escape. We'll just use the common backslash for that.
	while [[ "$t" == *\\* ]]	{ p="$p${t%%\\*}\\\\"; t="${t#*\\}"; }
	while [[ "$t" == *%* ]]		{ p="$p${t%%%*}\\%"; t="${t#*%}"; }
	while [[ "$t" == */* ]]		{ p="$p${t%%/*}%"; t="${t#*/}"; }
	: >"$trackdir/$p$t"
}


# Copyright Â© setEnv YEAR} by Tom Davis <tom@greyshirt.net>.

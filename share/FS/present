# <@(#)tag:tw.csongor.greyshirt.net,2019-11-19,18.43.13z/426820>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^[^T-n^t^] ^[^Upresentation directory^u^|^Upresentation file^u^]
#:     ^T-n^t  Do not try to connect to external display. You can also set
#:         NO_EXT_DISPLAY to that effect.
#:       1) Connects to external display (or dies),
#:       2) Opens ^Bbrowser^b and ^Bterminal^b in external display,
#:       3) Creates functions for handling slides (use ^Th^t for help),
#:     If ^Upresentation directory^u is given, the ^Upresentation file^u is
#:       ^Bpresentation.mdp^b.
#:     If ^Upresentation file^u is given, the ^Upresentation directory^u is
#:       the directory the file is in.
#:     If neither is given, the ^Upresentation directory^u is ^S$PWD^s, and
#:       the ^Upresentation file^u is ^Bpresentation.mdp^b.
#: FUNCTION expects ^Shtml^s and ^Snotes^s directories in ^Upresentation directory^u.
#:

function setURL {
	h1 $PAGE
	xprop -id $SURF_XID	\
		-f _SURF_GO 8s	\
		-set _SURF_GO "file://$HTMLPATH/$PAGE.html"
	print --
	sed -e 's/^;/ /' $NOTEPATH/$PAGE.txt | sparkle
	print "\n"
}

function n {
	((PAGE++))
	[[ -f $PAGE.html ]]|| {
		warn "END of Show (no page $PAGE.html)."
		((PAGE--))
		return 1
	  }
	setURL
}

function p {
	((PAGE==0))&& {
		warn "Already at BEGINNING of Show (no page $PAGE.html)."
		return 1
	  }
	((PAGE--))
	setURL
}

function g {
	local oldPage=$((PAGE))
	[[ ${1:?} == +([0-9]) ]]|| die 'Want a page number'
	PAGE=$1
	[[ -f $PAGE.html ]]|| {
		PAGE=oldPage
		warn "No such page. (No $PAGE.html)."
		return 1
	  }
	setURL
}

function r { setURL; }
function 1 { PAGE=1; setURL; }

function T { xdotool windowraise $ST_XID; }
function R { xdotool windowraise $SURF_XID; }

function Kill {
	xdotool windowclose $ST_XID
	xdotool windowclose $SURF_XID
	present-init -k
}

function h {
	sparkle <<-\
	==SPARKLE==
	^Tg^t ^Uslide number^u  go to given slide
	^Tn^t    next slide
	^Tp^t    previous slide
	^Tr^t    reload current slide
	^T1^t    go to first slide (same as ^Tg 1^t)

	^TR^t    raise presentation ^Bbrowser^b
	^TT^t    raise presentation ^Bterminal^b

	^TKill^t Close browser and terminal, disconnect display
	==SPARKLE==
}

function present {
	local PresSrc PresPath wantMake
	unalias R T g n p r 1
	[[ ${1:-} == -n ]]&& {
		NO_EXT_DISPLAY=1
		shift
	  }

	[[ -z $NO_EXT_DISPLAY ]]&& eval "$(present-init)"
	: ${SURF_XID:?} ${ST_XID:?}

	if [[ -z ${1:-} ]]; then
		PresPath=$PWD
	else
		PresPath=$(readlink -fn "$1")
		desparkle "$1"
		[[ -n $PresPath ]]||
			die "^B$REPLY^b does not resolve to a file system object."
		[[ -e $PresPath ]]|| die "^B$REPLY^b does not exist."
		[[ -f $PresPath ]]&& {
			PresSrc=${PresPath##*/}
			PresPath=${PresPath%/*}
		  }
		[[ -d $PresPath ]]|| die "^B$REPLY^b is not a directory."
	fi

	builtin cd $PresPath ||
		die "Could not ^Tcd^t to ^B$PresPath^b."

	HTMLPATH=$PresPath/html
	NOTEPATH=$PresPath/notes

	wantMake=false
	[[ -d $HTMLPATH ]]|| wantMake=true
	[[ -d $NOTEPATH ]]|| wantMake=true

	$wantMake &&
		presentation-make "./${PresSrc:-}"

	builtin cd $HTMLPATH ||
		die "Could not ^Tcd^t to ^B$HTMLPATH^b."
	P=$((PAGE))
	typeset -i -Z3 PAGE=${P:-1}

	notify 'Ready' 'Use ^T1^t to show first slide.' 'Use ^Th^t for help.'
}

# Copyright Â© 2019 by Tom Davis <tom@greyshirt.net>.

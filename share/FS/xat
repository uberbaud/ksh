# <@(#)tag:csongor.greyshirt.net,2017-08-07:tw/15.12.10z/32cf8b6>
# vim: filetype=ksh tabstop=4 textwidth=72 noexpandtab

#: FUNCTION ^Utime^u ^[^Umessage_...^u^]
#:   Show an X11 messagebox at specified time, where time is either
#:     a fixed time ^UH^u^T:^t^UMM^u, or
#:     an interval ^[^UH^u^Th^t^]^UM^u^[^Tm^t^]

needs date needs-path
function xat {
	(($#))|| return 0

	local NOW="$(date +%s)" THEN='' DAY='today'
	if [[ $1 == ?(1[0-9]|2[0-3]):[0-5][0-9] ]]; then
		local h=${1%:*} m=${1#*:}
		THEN="$(date -j +%s $h$m)"
		((NOW<THEN))|| ((THEN+=(24*60*60)))
	elif [[ $1 == [0-9]:[0-5][0-9] ]]; then
		local h=${1%:*} m=${1#*:}
		THEN="$(date -j +%s 0$h$m)"
		((NOW<THEN))|| ((THEN+=(12*60*60)))
		((NOW<THEN))|| ((THEN+=(12*60*60)))
	elif [[ $1 == +([0-9])h+([0-9])?(m) ]]; then
		local h=${1%h*} m=${1#*h}; m=${m%m}
		THEN=$((NOW+(((h*60)+m)*60)))
	elif [[ $1 == +([0-9])?(m) ]]; then
		local m=${1%m}
		THEN=$((NOW+(m*60)))
	else
		die 'Unrecognized time or interval format.'
	fi

	[[ "$(date -r $NOW +%d)" == "$(date -r $THEN +%d)" ]]|| DAY='tomorrow'

	local alarms=${XDG_DATA_HOME:?}/alarms
	needs-path -or-die "$alarms"

	local fmt='  \e[34m>>>\e[39m Setting message for \e[1m%s\e[22m %s.\n'
	local HHMM="$(date -r $THEN +%H:%M)"
	printf "$fmt" "$HHMM" $DAY
	# but we're really setting it 15 seconds before that, which is 
	# itself rounded down to the exact minute
	THEN=$((THEN-(THEN%60)-15))

	local alfile="$alarms"/$THEN
	[[ -s $alfile ]]|| date -r $THEN +"%Y-%m-%d $HHMM" >>$alfile
	shift
	(($#))|| set "WAKE UP!${NL}IT'S THAT TIME!"
	echo -e "$*" >>$alfile
}


# Copyright Â© 2017 by Tom Davis <tom@greyshirt.net>.
